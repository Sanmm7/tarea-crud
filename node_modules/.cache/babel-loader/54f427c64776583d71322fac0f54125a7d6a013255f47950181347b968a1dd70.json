{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nemec\\\\Downloads\\\\Proyecto\\\\my-first-project\\\\src\\\\components\\\\EditUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom'; // Importa useParams y useNavigate\nimport { updateUser, getUsers } from '../services/UserService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditUser = () => {\n  _s();\n  const [name, setName] = useState('');\n  const {\n    id\n  } = useParams(); // Obtiene el ID de los parámetros de la URL\n  const navigate = useNavigate(); // Inicializa el hook useNavigate\n\n  useEffect(() => {\n    getUsers().then(response => {\n      const user = response.data.find(user => user.id === parseInt(id));\n      if (user) {\n        setName(user.name);\n      } else {\n        console.error('User not found'); // Maneja el caso si no se encuentra el usuario\n      }\n    });\n  }, [id]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateUser(id, {\n      name\n    }).then(response => {\n      console.log(response.data);\n      navigate('/'); // Redirige a la lista de usuarios después de actualizar\n    }).catch(error => {\n      console.error('Error updating user:', error); // Maneja cualquier error\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      placeholder: \"Name\",\n      required: true // Campo obligatorio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(EditUser, \"/V7GrFOP+DDRnoz+f5sNQRgb5rQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditUser;\nexport default EditUser;\nvar _c;\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","updateUser","getUsers","jsxDEV","_jsxDEV","EditUser","_s","name","setName","id","navigate","then","response","user","data","find","parseInt","console","error","handleSubmit","e","preventDefault","log","catch","onSubmit","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nemec/Downloads/Proyecto/my-first-project/src/components/EditUser.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // Importa useParams y useNavigate\r\nimport { updateUser, getUsers } from '../services/UserService';\r\n\r\nconst EditUser = () => {\r\n  const [name, setName] = useState('');\r\n  const { id } = useParams(); // Obtiene el ID de los parámetros de la URL\r\n  const navigate = useNavigate(); // Inicializa el hook useNavigate\r\n\r\n  useEffect(() => {\r\n    getUsers().then(response => {\r\n      const user = response.data.find(user => user.id === parseInt(id));\r\n      if (user) {\r\n        setName(user.name);\r\n      } else {\r\n        console.error('User not found'); // Maneja el caso si no se encuentra el usuario\r\n      }\r\n    });\r\n  }, [id]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateUser(id, { name })\r\n      .then(response => {\r\n        console.log(response.data);\r\n        navigate('/'); // Redirige a la lista de usuarios después de actualizar\r\n      })\r\n      .catch(error => {\r\n        console.error('Error updating user:', error); // Maneja cualquier error\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        placeholder=\"Name\"\r\n        required // Campo obligatorio\r\n      />\r\n      <button type=\"submit\">Update User</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAC3D,SAASC,UAAU,EAAEC,QAAQ,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM;IAAEY;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhCF,SAAS,CAAC,MAAM;IACdI,QAAQ,CAAC,CAAC,CAACS,IAAI,CAACC,QAAQ,IAAI;MAC1B,MAAMC,IAAI,GAAGD,QAAQ,CAACE,IAAI,CAACC,IAAI,CAACF,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKO,QAAQ,CAACP,EAAE,CAAC,CAAC;MACjE,IAAII,IAAI,EAAE;QACRL,OAAO,CAACK,IAAI,CAACN,IAAI,CAAC;MACpB,CAAC,MAAM;QACLU,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;MACnC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACT,EAAE,CAAC,CAAC;EAER,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBpB,UAAU,CAACQ,EAAE,EAAE;MAAEF;IAAK,CAAC,CAAC,CACrBI,IAAI,CAACC,QAAQ,IAAI;MAChBK,OAAO,CAACK,GAAG,CAACV,QAAQ,CAACE,IAAI,CAAC;MAC1BJ,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CACDa,KAAK,CAACL,KAAK,IAAI;MACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC,CAAC;IAChD,CAAC,CAAC;EACN,CAAC;EAED,oBACEd,OAAA;IAAMoB,QAAQ,EAAEL,YAAa;IAAAM,QAAA,gBAC3BrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEpB,IAAK;MACZqB,QAAQ,EAAGR,CAAC,IAAKZ,OAAO,CAACY,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE;MACzCG,WAAW,EAAC,MAAM;MAClBC,QAAQ,OAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACF/B,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX,CAAC;AAAC7B,EAAA,CAxCID,QAAQ;EAAA,QAEGN,SAAS,EACPC,WAAW;AAAA;AAAAoC,EAAA,GAHxB/B,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}